openapi: 3.0.0
info:
  title: Example API with AI Tools
  version: 1.0.0
  description: Example API demonstrating AI tool integration via OpenMCP

servers:
  - url: https://api.example.com/v1
    description: Production server

paths:
  /users/{userId}:
    get:
      summary: Get user by ID
      description: Retrieve a specific user's information
      x-ai-tool: true
      x-ai-description: "Retrieve information about a specific user by their ID. Use this when you need to get user details, profile information, or check if a user exists."
      x-ai-category: "user-management"
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier for the user
          schema:
            type: string
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User's unique identifier
                  name:
                    type: string
                    description: User's full name
                  email:
                    type: string
                    format: email
                    description: User's email address
                  created_at:
                    type: string
                    format: date-time
        '404':
          description: User not found

  /orders:
    post:
      summary: Create new order
      description: Creates a new customer order
      x-ai-tool: true
      x-ai-description: "Create a new order for a customer. Use this tool when a user wants to purchase items or place an order for products."
      x-ai-category: "commerce"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - items
              properties:
                customerId:
                  type: string
                  description: ID of the customer placing the order
                items:
                  type: array
                  description: List of items to order
                  items:
                    type: object
                    required:
                      - productId
                      - quantity
                    properties:
                      productId:
                        type: string
                        description: ID of the product to order
                      quantity:
                        type: integer
                        minimum: 1
                        description: Quantity of the product
                      price:
                        type: number
                        format: float
                        description: Unit price of the product
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                  status:
                    type: string
                    enum: [pending, processing, shipped, delivered]
                  total:
                    type: number
                    format: float
                  created_at:
                    type: string
                    format: date-time

  /products/search:
    get:
      summary: Search products
      description: Search for products by name or category
      x-ai-tool: true
      x-ai-description: "Search for products in the catalog. Use this to help users find products they're looking for by name, category, or other criteria."
      x-ai-category: "commerce"
      parameters:
        - name: query
          in: query
          required: false
          description: Search query for product name
          schema:
            type: string
        - name: category
          in: query
          required: false
          description: Filter by product category
          schema:
            type: string
        - name: min_price
          in: query
          required: false
          description: Minimum price filter
          schema:
            type: number
            format: float
        - name: max_price
          in: query
          required: false
          description: Maximum price filter
          schema:
            type: number
            format: float
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return
          schema:
            type: integer
            default: 20
            maximum: 100
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        price:
                          type: number
                          format: float
                        category:
                          type: string
                        in_stock:
                          type: boolean
                  total:
                    type: integer
                    description: Total number of matching products

  /users/{userId}/preferences:
    put:
      summary: Update user preferences
      description: Update a user's account preferences and settings
      x-ai-tool: true
      x-ai-description: "Update user preferences such as notification settings, theme preferences, or other account settings."
      x-ai-category: "user-management"
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier for the user
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                      description: Enable email notifications
                    sms:
                      type: boolean
                      description: Enable SMS notifications
                    push:
                      type: boolean
                      description: Enable push notifications
                theme:
                  type: string
                  enum: ["light", "dark", "auto"]
                  description: UI theme preference
                language:
                  type: string
                  description: Preferred language code (e.g., en, es, fr)
                timezone:
                  type: string
                  description: User's timezone (e.g., America/New_York)
      responses:
        '200':
          description: Preferences updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updated_at:
                    type: string
                    format: date-time